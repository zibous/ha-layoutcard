/**
 * ha-layoutcard 0.0.4
 * https://github.com/zibous/ha-layoutcard
 * 
 * License: MIT
 * Generated on 2020
 * Author: Peter siebler
 */

"use strict";const appinfo={name:"✓ custom:cards-layout",version:"0.0.4"};console.info("%c "+appinfo.name+"    %c ▪︎▪︎▪︎▪︎ Version: "+appinfo.version+" ▪︎▪︎▪︎▪︎ ","color:#FFFFFF; background:#3498db;display:inline-block;font-size:12px;font-weight:200;padding: 4px 0 4px 0","color:#2c3e50; background:#ecf0f1;display:inline-block;font-size:12px;font-weight:200;padding: 4px 0 4px 0");class CardsLayout extends HTMLElement{constructor(){super()}set hass(t){this._hass=t}async setConfig(t){if(!t||!t.cards||!Array.isArray(t.cards))throw new Error("Card config incorrect");this._config=t,this.logenabled=this._config.logger||!0,this.id=Math.random().toString(36).substr(2,9),window.loadCardHelpers&&(this.helpers=await window.loadCardHelpers()),this.renderCards()}logInfo(...t){this.logenabled&&console.info((new Date).toISOString(),...t)}async createCardElement(t){const e=(t,n)=>{if(this.helpers)return"divider"===n.type?this.helpers.createRowElement(n):this.helpers.createCardElement(n);const i=document.createElement(t);try{i.setConfig(n)}catch(i){return console.error(t,i),((t,n)=>e("hui-error-card",{type:"error",error:t,origConfig:n}))(i.message,n)}return i};let n=t.type;n=n.startsWith("divider")?"hui-divider-row":n.startsWith("custom:")?n.substr("custom:".length):`hui-${n}-card`;const i=e(n,t);return i.hass=this._hass,i}addCss(t){const e=document.createElement("style");e.setAttribute("id","lc-"+this.id),e.textContent='\n        div.cl-layout {\n            position: relative;\n            margin: 0 auto;\n        }\n        .cl-icon {\n            vertical-align: bottom;\n            padding: 0 8px 0 0;\n        }\n        ha-card,\n        .cl-card {\n            margin: 0.5em !important;\n        }\n        div.cl-layout-row {\n            width: 100%;\n            margin-bottom: 3em;\n        }\n        div.cl-layout-col {\n            margin: 0 auto;\n            width: 100%;\n        }\n        div.cl-layout-col p {\n            white-space: pre-wrap;\n        }\n        div.cl-layout h1,\n        div.cl-layout-col h1,\n        div.cl-layout-col h2 {\n            line-height: 1.2em;\n            white-space: nowrap;\n            overflow: hidden;\n            text-overflow: ellipsis;\n            width: 99%;\n            margin: 1.2em 0 0.5em 0;\n        }\n        .cl-card-layer {\n            position: relative;\n            float: left;\n            margin: 0;\n        }\n        .cl-card {\n            background: transparent !important;\n        }\n        .cl-text {\n            margin: 0 0 2em 2em;\n        }\n        .clearfix::before,\n        .clearfix::after {\n            content: " ";\n            display: table;\n        }\n        .clearfix::after {\n            content: ".";\n            visibility: hidden;\n            display: block;\n            height: 0;\n            clear: both;\n        }\n        @media (max-width: 620px) {\n            div.cl-layout {\n                min-width: 95% !important;\n                max-width: 95% !important;\n                margin: 0.5em !important;\n            }\n            .cl-card-layer {\n                float: none;\n                width: 100% !important;\n                max-width: 100% !important;\n            }\n            div.cl-layout-col > * {\n                margin: 0.3em;\n            }\n            ha-card,\n            .cl-card {\n                margin: 0.3em !important;\n            }\n            div.cl-layout-col h1,\n            div.cl-layout-col h2 {\n                margin: 1em 0 0.3em 0;\n            }\n            div.cl-layout-col p {\n                margin: 0.3em 0 1em 0;\n            }\n        }\n        ',t.appendChild(e)}styleCard(t,e){if(t.shadowRoot)if(t.shadowRoot.querySelector("ha-card")){let n=t.shadowRoot.querySelector("ha-card");n.classList.add("cl-card"),e.style&&(n.style.cssText=e.style.replaceAll("\n","")),n.style.margin="0.5em"}else{let e=t.shadowRoot.getElementById("root");if(e||(e=t.shadowRoot.getElementById("card")),!e)return;e=e.childNodes;for(let t=0;t<e.length;t++)e[t].style&&e[t].classList.add("cl-card"),this.styleCard(e[t])}else{if("function"==typeof t.querySelector&&t.querySelector("ha-card")){t.querySelector("ha-card").classList.add("cl-card")}let e=t.childNodes;for(let t=0;t<e.length;t++)e[t]&&e[t].style&&e[t].classList.add("cl-card"),this.styleCard(e[t])}}createStageLayer(){return this.stage_layer=document.createElement("div"),this.stage_layer.style.cssText="display:none",this.stage_layer.id="stage",!0}async renderCards(){const t=document.createElement("div");if(t.setAttribute("class","cl-layout"),t.setAttribute("id","cl-"+this.id),this.addCss(t),this._config.width&&(t.style.width=t.style.minWidth=this._config.width),this._config.title){const e=document.createElement("h1");if(this._config.icon){const t=document.createElement("ha-icon");t.setAttribute("icon",this._config.icon),t.setAttribute("class","cl-icon"),t.style.cssText="--mdc-icon-size:36px",e.appendChild(t);const n=document.createElement("span");n.innerHTML=this._config.title,e.appendChild(n)}else e.innerHTML=this._config.title;t.append(e)}if(this._config.description){const e=document.createElement("p");e.innerHTML=this._config.description,t.append(e)}this._config.cards.forEach((e,n)=>{const i=document.createElement("div");i.setAttribute("class","cl-layout-row"),e.row.forEach((t,e)=>{const n=document.createElement("div");if(n.setAttribute("class","cl-layout-col clearfix"),t.title){const e=document.createElement("h2");e.innerHTML=t.title,n.append(e)}if(t.description){const e=document.createElement("p");e.innerHTML=t.description,n.append(e)}let a=t.width||"100%",r=t.height||"100%",o={width:"number"==typeof a?a+"px":a,height:"number"==typeof r?r+"px":r,style:null};const s=t.entities,l=s.map(t=>this.createCardElement(t));Promise.all(l).then(t=>{t.forEach((t,e)=>{const i=document.createElement("div");i.setAttribute("class","cl-card-layer"),i.style.width=i.style.maxWidth=o.width,i.style.height=i.style.minHeight=o.height,window.setTimeout(()=>{t.updateComplete?t.updateComplete.then(()=>this.styleCard(t,s[e])):this.styleCard(t,s[e])},100),i.append(t),n.appendChild(i)})}),i.append(n)}),t.append(i)}),this.appendChild(t)}getCardSize(){return 10}}customElements.define("cards-layout",CardsLayout);